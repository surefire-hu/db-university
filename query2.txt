
## db-university (Query 2)

(join)

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT 
    students.id, students.surname, students.date_of_birth, students.fiscal_code,
    students.enrolment_date, students.registration_number, students.email
FROM 
    `students`
JOIN degrees ON students.degree_id = degrees.id
WHERE degrees.name = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
SELECT 
    degrees.id, degrees.level, degrees.address, degrees.email, degrees.website
FROM 
    `degrees`
JOIN departments ON degrees.department_id = departments.id
WHERE departments.name = 'Dipartimento di Neuroscienze' AND degrees.level = 'magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT courses.*
FROM 
    `courses`
JOIN course_teacher ON courses.id = course_teacher.course_id
JOIN teachers ON course_teacher.teacher_id = teachers.id
WHERE teachers.name = 'Fulvio' AND teachers.surname = 'Amato';

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
SELECT 
    students.id AS student_id, students.name AS student_name, students.surname AS student_surname,
    students.date_of_birth, students.fiscal_code, students.enrolment_date, students.registration_number, students.email,
    courses.id AS course_id, courses.name AS course_name, courses.description AS course_description,
    departments.id AS department_id, departments.name AS department_name, departments.address AS department_address,
    departments.phone AS department_phone, departments.email AS department_email, departments.website AS department_website
FROM 
    `students`
JOIN courses ON students.degree_id = courses.id
JOIN departments ON courses.degree_id = departments.id
ORDER BY students.surname, students.name;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT 
    degrees.id AS degree_id,
    degrees.name AS degree_name,
    courses.id AS course_id,
    courses.name AS course_name,
    teachers.id AS teacher_id,
    teachers.name AS teacher_name,
    teachers.surname AS teacher_surname
FROM 
    `degrees`
JOIN courses ON degrees.id = courses.degree_id
JOIN course_teacher ON courses.id = course_teacher.course_id
JOIN teachers ON course_teacher.teacher_id = teachers.id
ORDER BY degrees.name, courses.name;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
SELECT 
    teachers.*, departments.name AS department_name 
FROM 
    `teachers`
JOIN course_teacher ON course_teacher.teacher_id = teachers.id
JOIN courses ON course_teacher.course_id = courses.id 
JOIN degrees ON courses.degree_id = degrees.id 
JOIN departments ON degrees.department_id = departments.id 
WHERE departments.id = 5;

8. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.



(group)

1. Contare quanti iscritti ci sono stati ogni anno
SELECT 
    YEAR(enrolment_date) AS AnnoIscrizione, COUNT(id) AS NumeroIscritti
FROM 
    `students`
GROUP BY YEAR(enrolment_date)
ORDER BY AnnoIscrizione;

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT 
    office_address, COUNT(Id) AS NumeroInsegnanti
FROM 
    `teachers`
GROUP BY office_address
ORDER BY NumeroInsegnanti DESC;

3. Calcolare la media dei voti di ogni appello d'esame
SELECT 
    exams.id AS exam_id, exams.date, exams.hour, exams.location, exams.address,
    AVG(exam_student.vote) AS average_grade
FROM 
    `exams`
INNER JOIN exam_student ON exams.id = exam_student.exam_id
GROUP BY exams.id, exams.date, exams.hour, exams.location, exams.address
ORDER BY exams.date, exams.hour;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT 
    departments.id AS department_id, departments.name AS department_name,
    COUNT(courses.id) AS numero_corsi_di_laurea
FROM 
    `departments`
LEFT JOIN courses ON departments.id = courses.degree_id
GROUP BY departments.id, departments.name
ORDER BY department_id;
